
# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT
{
    "llm_config": {
        "model_name": "gpt-4o",
    },
    "max_iterations": 40000,
    "max_execution_seconds": 6000,
    "commondefs": {
        "replacement_strings": {
            "instructions_prefix": """
            You are an assistant helping with the process of building an agent network.
            Only answer inquiries that are directly within your area of expertise.
            Do not try to help for other matters.
            Do not mention what you can NOT do. Only mention what you can do.
            """,
        },
    },
    "tools": [
        # This first agent definition is regarded as the "Front Man", which
        # does all the talking to the outside world/client.
        #
        # Some disqualifications from being a front man:
        #   1) Cannot use a CodedTool "class" definition
        #   2) Cannot use a Tool "toolbox" definition
        #
        # Besides the first agent being the front man, these tool definitions
        # do not have to be in any particular order. How they are linked and
        # call each other is defined within their own specs.
        # This could be a graph, potentially even with cycles.
        {
            "name": "agent_network_designer",
            "function": {
                "description": "I can help you create an agent network."
            },
            "instructions": """
{instructions_prefix}
You are responsible for designing and modifying agent networks based on user requirements.
Take the following steps. Make sure you don't miss any details and follow the steps carefully.
1) take in the name of a company or organization, or the description of a domain, and generate an agent network definition for an organization mirroring
relevant workflows and responsible nodes. Call your `agent_network_editor` tool for this one time.  Make sure the name of the agent network is camelcase.

2) Once the agent network definition is generated, call the `instruction_refiner` tool one time.

3) Next, get 3-4 sample queries for the generated agent network by calling your `query_generator` tool.

4) Once all is done, call the `produce_agent_network_hocon` tool one time to generate the hocon and return the exact full agent network definition hocon, along with the 3-4 sample queries as example usage.
            """,
            "allow": {
                "to_upstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork", "agent_name"]
                },
                "from_downstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork"]
                },
                "to_downstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork"]
                }
            },
           "tools": ["/agent_network_editor", "query_generator", "instruction_refiner", "produce_agent_network_hocon"]
        },
        {
            "name": "produce_agent_network_hocon",
            "function": {
                "description": "Generate the complete hocon definition for an agent network and return it verbatim."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_name": {
                            "type": "string",
                            "description": "name of project, business or company or other description, write it in snake case, e.g. foo_bar."
                        },
                    },
                    "required": ["agent_network_name"]
                }
            },
            "class": "create_agent_network_hocon.CreateAgentNetworkHocon"
        },
               
        {
            "name": "query_generator",
            "function": {
                "description": "Generate sample queries on a given agent network definition."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_description": {
                            "type": "string",
                            "description": "name of project, business or company or other description."
                        },
                    },
                }
            },
            "instructions": """
{instructions_prefix}
You generate example queries that the created agent network can handle.
First get the agent network using your agent network tool.
Ensure the queries align with the agents' capabilities.
Provide a diverse range of queries to illustrate the network's functions.
The queries should show how multiple sub networks might contribute to a consolidated response from the top agent.
Just give the enumerated sample queries. Try to keep the queries simple and natural.
Make some of the examples transactional. If not stated, return no more than 3-4 examples.
            """,
            "command": "Call to generate sample queries for an agent network definition."
            "tools": ["get_agent_network_tool"]
        },
        {
            "name": "get_agent_network_tool",
            "function": {
                "description": "Get the agent network definition."
            },
            "class": "get_agent_network.GetAgentNetwork"
        },
        {
            "name": "instruction_refiner",
            "function": {
                "description": "Refine the instructions for a given agent in an agent network definition."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_description": {
                            "type": "string",
                            "description": "name of project, business or company or other description."
                        },
                    },
                }
            },
            "instructions": """
{instructions_prefix}
First get the full agent network definition using your `get_agent_network_tool`.
Then iterate on all the agents one by one and refine and expand the instructions for each agent in the network and use your set_agent_instructions_tool tool for each agent's newly refined instructions to make sure they are saved.
Ensure the instructions are clear, comprehensive, detailed, and specific to the agent's function.
Provide context to improve the agent's effectiveness.
Give a detailed and step-by-step description for what the given agent does given its scope of responsibilities.
Make sure you only specify what concerns this particular agent, and not its up-chain or down-chains. The description
should be specific to this agent. No need to mention anything about other agents or what they do.
Make sure it is in-line with the company's cultural values and business objectives.
Do not format your response and keep it as plain text with no other formatting characters.
Wrap the lines at around 120 characters. Write it as if you are telling the agent.
            """,
            "command": "Refine instructions of each agent in the given agent network."
            "tools": ["get_agent_network_tool", "set_agent_instructions_tool"]
        }
        {
            "name": "set_agent_instructions_tool",
            "function": {
                "description": "Set the instructions for an agent in an agent network."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_name": {
                            "type": "string",
                            "description": "the name of the agent being added."
                        },
                        "instructions": {
                            "type": "string",
                            "description": "the instructions for the agent."
                        },
                    },
                    "required": ["agent_name", "instructions"]
                }
            },
            "class": "set_agent_instructions.SetAgentInstructions"
        },
    ]
}
